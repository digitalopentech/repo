 @startuml
actor DedeUI
participant "Kafka: request_topic" as KafkaRequest
participant "Kafka: response_topic" as KafkaResponse
participant "Kafka: error_topic" as KafkaError
participant Microservice
participant "GitLab"
participant "Apache Pinot" as Pinot
participant "DLQ (Dead Letter Queue)" as DLQ

== Formulário de Criação (Create Form) ==
DedeUI -> KafkaRequest: Post create request
KafkaRequest -> Microservice: Consume create request
Microservice -> Microservice: Generate table-config.json and table-schema.json

alt Success on JSON Generation
    Microservice -> GitLab: Create branch and commit JSON files
    GitLab --> Microservice: Branch and commit created
    Microservice -> KafkaResponse: Post awaiting approval
    KafkaResponse -> DedeUI: Notify awaiting approval
else Failure on JSON Generation
    Microservice -> KafkaError: Post error (creation failure)
    KafkaError -> DedeUI: Notify error
end

== Formulário de Alteração (Update Form) ==
DedeUI -> KafkaRequest: Post update request
KafkaRequest -> Microservice: Consume update request
Microservice -> Microservice: Generate updated JSON files

alt Success on JSON Update
    Microservice -> GitLab: Commit updated JSON files to branch
    GitLab --> Microservice: Branch updated with new commit
    Microservice -> KafkaResponse: Post update notification
    KafkaResponse -> DedeUI: Notify update processed
else Failure on JSON Update
    Microservice -> KafkaError: Post error (update failure)
    KafkaError -> DedeUI: Notify error
end

== Formulário de Aprovação (Approval Form) ==
actor Admin as Administrator
Administrator -> DedeUI: Approve via form
DedeUI -> KafkaRequest: Post approval request
KafkaRequest -> Microservice: Consume approval request

alt Success in Pinot Processing
    Microservice -> Pinot: Create or update table in Apache Pinot
    Pinot --> Microservice: Table created/updated
    Microservice -> GitLab: Create merge request and approve
    GitLab --> Microservice: MR to master created and approved
    Microservice -> KafkaResponse: Post success
    KafkaResponse -> DedeUI: Notify success
else Failure in Pinot Processing
    Microservice -> KafkaError: Post error (Pinot processing failure)
    KafkaError -> DedeUI: Notify error
    Microservice -> DLQ: Send message to DLQ after retries
    DLQ --> Microservice: Message stored in DLQ for manual processing
end

== Handling Retries and Errors ==
alt Temporary Failure
    Microservice -> Microservice: Retry with backoff (up to 3 times)
else Permanent Failure
    Microservice -> KafkaError: Post error after retries
    Microservice -> DLQ: Send message to DLQ
    DLQ --> Microservice: Message stored in DLQ for manual processing
end

@enduml
